
INCLUDE_DIRECTORIES(
  ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_BASICTESTING_SUBDIR}
  ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_IMAGEACCESS_SUBDIR}
)

SET(TESTITKVTKIMAGE_SRC_FILES
  TestITKVTKImage.cxx
  ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_IMAGEACCESS_SUBDIR}/oraITKVTKImage.h
  ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_IMAGEACCESS_SUBDIR}/oraITKVTKImage.txx
)
SET(TESTITKVTKIMAGE_LIBS
  ORAIFTools
  ORAIFImageAccess
  ITKIO 
  ITKBasicFilters
  vtkIO
  vtkImaging
)


ADD_EXECUTABLE(TestITKVTKImage ${TESTITKVTKIMAGE_SRC_FILES})
TARGET_LINK_LIBRARIES(TestITKVTKImage ${TESTITKVTKIMAGE_LIBS})
ADD_TEST(TestITKVTKImage ${EXECUTABLE_OUTPUT_PATH}/TestITKVTKImage -v)
SET_TESTS_PROPERTIES(TestITKVTKImage PROPERTIES TIMEOUT 30)

# Flags that remove previous compile flags
SET(UNDEFINE_FLAGS "-UUSE_ITK_FOR_WRITING -UUSE_XRAWIO_FOR_ALL -UFAST_XIO_COMPRESSION")

# Use VTK for writing
ADD_EXECUTABLE(TestITKVTKImage2 ${TESTITKVTKIMAGE_SRC_FILES})
SET_TARGET_PROPERTIES(TestITKVTKImage2 PROPERTIES 
  COMPILE_FLAGS "${UNDEFINE_FLAGS} -DFAST_XIO_COMPRESSION")
  #CAUSES ERROR: COMPILE_FLAGS "${UNDEFINE_FLAGS} -DUSE_XRAWIO_FOR_ALL -DFAST_XIO_COMPRESSION")
TARGET_LINK_LIBRARIES(TestITKVTKImage2 ${TESTITKVTKIMAGE_LIBS})
ADD_TEST(TestITKVTKImage2 ${EXECUTABLE_OUTPUT_PATH}/TestITKVTKImage2 -v)
SET_TESTS_PROPERTIES(TestITKVTKImage2 PROPERTIES TIMEOUT 30)

# Use ITK for writing, no XRawIO
ADD_EXECUTABLE(TestITKVTKImage3 ${TESTITKVTKIMAGE_SRC_FILES})
SET_TARGET_PROPERTIES(TestITKVTKImage3 PROPERTIES 
  COMPILE_FLAGS "${UNDEFINE_FLAGS} -DUSE_ITK_FOR_WRITING")
TARGET_LINK_LIBRARIES(TestITKVTKImage3 ${TESTITKVTKIMAGE_LIBS})
ADD_TEST(TestITKVTKImage3 ${EXECUTABLE_OUTPUT_PATH}/TestITKVTKImage3 -v)
SET_TESTS_PROPERTIES(TestITKVTKImage3 PROPERTIES TIMEOUT 30)

# Use VTK for writing, no XRawIO
ADD_EXECUTABLE(TestITKVTKImage4 ${TESTITKVTKIMAGE_SRC_FILES})
SET_TARGET_PROPERTIES(TestITKVTKImage4 PROPERTIES 
  COMPILE_FLAGS "${UNDEFINE_FLAGS}")
TARGET_LINK_LIBRARIES(TestITKVTKImage4 ${TESTITKVTKIMAGE_LIBS})
ADD_TEST(TestITKVTKImage4 ${EXECUTABLE_OUTPUT_PATH}/TestITKVTKImage4 -v)
SET_TESTS_PROPERTIES(TestITKVTKImage4 PROPERTIES TIMEOUT 30)

# Use ITK for writing, and XRawIO but "slow" XIO_Compression
ADD_EXECUTABLE(TestITKVTKImage5 ${TESTITKVTKIMAGE_SRC_FILES})
SET_TARGET_PROPERTIES(TestITKVTKImage5 PROPERTIES 
  COMPILE_FLAGS "${UNDEFINE_FLAGS} -DUSE_ITK_FOR_WRITING -DUSE_XRAWIO_FOR_ALL")
TARGET_LINK_LIBRARIES(TestITKVTKImage5 ${TESTITKVTKIMAGE_LIBS})
ADD_TEST(TestITKVTKImage5 ${EXECUTABLE_OUTPUT_PATH}/TestITKVTKImage5 -v)
SET_TESTS_PROPERTIES(TestITKVTKImage5 PROPERTIES TIMEOUT 30)

# Copy test-specific data to binary directory
ADD_CUSTOM_COMMAND(TARGET TestITKVTKImage POST_BUILD
   COMMAND ${CMAKE_COMMAND} -E echo "moving test data ..."
)
ADD_CUSTOM_COMMAND(TARGET TestITKVTKImage POST_BUILD 
    COMMAND ${CMAKE_COMMAND} -E make_directory ${CMAKE_CURRENT_BINARY_DIR}/data
)
#ADD_CUSTOM_COMMAND(TARGET TestITKVTKImage POST_BUILD
#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/data/CT.mhd ${CMAKE_CURRENT_BINARY_DIR}/data
#)
#ADD_CUSTOM_COMMAND(TARGET TestITKVTKImage POST_BUILD
#  COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/data/CT.zraw ${CMAKE_CURRENT_BINARY_DIR}/data
#)


