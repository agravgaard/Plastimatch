
# Model library
SET(OWN_LIB_NAME ORAIFModel)

INCLUDE_DIRECTORIES(
  ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_TOOLS_SUBDIR}
  ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_IMAGEACCESS_SUBDIR}
)

IF(ORAIFUTILS_USE_QT)
  INCLUDE_DIRECTORIES(
    ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_REGISTRATION_SUBDIR}
    ${ORAIFUTILS_SOURCE_DIR}/${ORAIFUTILS_TRANSFORM_SUBDIR}
  )
  QT4_WRAP_CPP(MOC_SRCS
    oraTask.h
    oraTaskManager.h
    oraImageImporterTask.h
    oraQVTKProgressEventAdaptor.h
    oraQProgressEmitter.h
  )
  
  SET(${OWN_LIB_NAME}_HDRS 
    oraTask.h
    oraTaskManager.h
    oraImageImporterTask.h
    oraImageOrienter.h     
    oraQVTKProgressEventAdaptor.h
    oraQProgressEmitter.h
  )
  
  SET(${OWN_LIB_NAME}_TXX
    oraImageOrienter.txx
  )
  
  SET(${OWN_LIB_NAME}_SRCS
    ${MOC_SRCS}
    oraTask.cxx
    oraTaskManager.cxx
    oraImageImporterTask.cxx
    oraQVTKProgressEventAdaptor.cxx
    oraQProgressEmitter.cxx
  )
  
  # Convince MSVC that txx files are also C++ files!
  IF(MSVC)
    SET_SOURCE_FILES_PROPERTIES(
      ${${OWN_LIB_NAME}_TXX}
      PROPERTIES 
      LANGUAGE "CXX" 
      HEADER_FILE_ONLY FALSE
      COMPILE_FLAGS ""
    )
  ENDIF(MSVC)
ENDIF(ORAIFUTILS_USE_QT)

SET(${OWN_LIB_NAME}_HDRS 
  ${${OWN_LIB_NAME}_HDRS}
  oraImageConsumer.h
)

SET(${OWN_LIB_NAME}_SRCS
  ${${OWN_LIB_NAME}_SRCS}
  oraImageConsumer.cxx
)

ADD_LIBRARY(${OWN_LIB_NAME} ${ORAIFUTILS_LIBRARY_TYPE} ${${OWN_LIB_NAME}_SRCS} ${${OWN_LIB_NAME}_HDRS} ${${OWN_LIB_NAME}_TXX})
SET_TARGET_PROPERTIES(${OWN_LIB_NAME} PROPERTIES LINKER_LANGUAGE CXX)

SET(${OWN_LIB_NAME}_LINK_LIBRARIES ORAIFImageAccess)
IF(ORAIFUTILS_USE_QT)
  SET(${OWN_LIB_NAME}_LINK_LIBRARIES ${${OWN_LIB_NAME}_LINK_LIBRARIES} 
    ORAIFTools ORAIFRegistration ORAIFTransform
    ITKIO ITKCommon ITKBasicFilters
    vtkCommon
    ${QT_QTCORE_LIBRARY}
  )
ENDIF(ORAIFUTILS_USE_QT)
TARGET_LINK_LIBRARIES(${OWN_LIB_NAME} ${${OWN_LIB_NAME}_LINK_LIBRARIES})


# Add headers to export-set. NOTE: Quotes are important here otherwise only the first header is installed!
SET_TARGET_PROPERTIES(${OWN_LIB_NAME} PROPERTIES PUBLIC_HEADER "${${OWN_LIB_NAME}_HDRS}")

INSTALL(TARGETS ${OWN_LIB_NAME}
  # Add the library to the export-set
  EXPORT ORAIFUTILSLibraryDepends
  RUNTIME DESTINATION "${INSTALL_BIN_DIR}" COMPONENT bin
  LIBRARY DESTINATION "${INSTALL_LIB_DIR}" COMPONENT lib
  ARCHIVE DESTINATION "${INSTALL_LIB_DIR}" COMPONENT lib/static
  PUBLIC_HEADER DESTINATION "${INSTALL_INCLUDE_DIR}/${ORAIFUTILS_MODEL_SUBDIR}"
  COMPONENT dev)
INSTALL(FILES ${${OWN_LIB_NAME}_TXX} DESTINATION "${INSTALL_INCLUDE_DIR}/${ORAIFUTILS_MODEL_SUBDIR}")
