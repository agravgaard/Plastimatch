--- Plastimatch/src/plastimatch/base/plm_image_type.cxx	2016-08-10 00:01:45.563327191 +0200
+++ GitLabPlastimatch/src/plastimatch/base/plm_image_type.cxx	2016-08-10 00:54:10.259959645 +0200
@@ -60,30 +60,32 @@
     switch (type) {
     case PLM_IMG_TYPE_UNDEFINED:
         return "PLM_IMG_TYPE_UNDEFINED";
-    case PLM_IMG_TYPE_ITK_CHAR:
-        return "PLM_IMG_TYPE_ITK_CHAR";
     case PLM_IMG_TYPE_ITK_UCHAR:
         return "PLM_IMG_TYPE_ITK_UCHAR";
-    case PLM_IMG_TYPE_ITK_SHORT:
-        return "PLM_IMG_TYPE_ITK_SHORT";
+    case PLM_IMG_TYPE_ITK_CHAR:
+        return "PLM_IMG_TYPE_ITK_CHAR";
     case PLM_IMG_TYPE_ITK_USHORT:
         return "PLM_IMG_TYPE_ITK_USHORT";
-    case PLM_IMG_TYPE_ITK_LONG:
-        return "PLM_IMG_TYPE_ITK_LONG";
+    case PLM_IMG_TYPE_ITK_SHORT:
+        return "PLM_IMG_TYPE_ITK_SHORT";
     case PLM_IMG_TYPE_ITK_ULONG:
         return "PLM_IMG_TYPE_ITK_ULONG";
+    case PLM_IMG_TYPE_ITK_LONG:
+        return "PLM_IMG_TYPE_ITK_LONG";
     case PLM_IMG_TYPE_ITK_FLOAT:
         return "PLM_IMG_TYPE_ITK_FLOAT";
     case PLM_IMG_TYPE_ITK_DOUBLE:
         return "PLM_IMG_TYPE_ITK_DOUBLE";
     case PLM_IMG_TYPE_ITK_FLOAT_FIELD:
         return "PLM_IMG_TYPE_ITK_FLOAT_FIELD";
+    case PLM_IMG_TYPE_ITK_UCHAR_VEC:
+        return "PLM_IMG_TYPE_ITK_UCHAR_VEC";
     case PLM_IMG_TYPE_GPUIT_UCHAR:
         return "PLM_IMG_TYPE_GPUIT_UCHAR";
-    case PLM_IMG_TYPE_GPUIT_SHORT:
-        return "PLM_IMG_TYPE_GPUIT_SHORT";
     case PLM_IMG_TYPE_GPUIT_UINT16:
         return "PLM_IMG_TYPE_GPUIT_UINT16";
+    case PLM_IMG_TYPE_GPUIT_SHORT:
+        return "PLM_IMG_TYPE_GPUIT_SHORT";
     case PLM_IMG_TYPE_GPUIT_UINT32:
         return "PLM_IMG_TYPE_GPUIT_UINT32";
     case PLM_IMG_TYPE_GPUIT_INT32:
@@ -92,8 +94,8 @@
         return "PLM_IMG_TYPE_GPUIT_FLOAT";
     case PLM_IMG_TYPE_GPUIT_FLOAT_FIELD:
         return "PLM_IMG_TYPE_GPUIT_FLOAT_FIELD";
-    case PLM_IMG_TYPE_ITK_UCHAR_VEC:
-        return "PLM_IMG_TYPE_ITK_UCHAR_VEC";
+    case PLM_IMG_TYPE_GPUIT_LIST:
+        return "PLM_IMG_TYPE_GPUIT_LIST";
     case PLM_IMG_TYPE_GPUIT_UCHAR_VEC:
         return "PLM_IMG_TYPE_GPUIT_UCHAR_VEC";
     default:
@@ -107,30 +109,32 @@
     switch (type) {
     case PLM_IMG_TYPE_UNDEFINED:
         return "undefined";
-    case PLM_IMG_TYPE_ITK_CHAR:
-        return "char";
     case PLM_IMG_TYPE_ITK_UCHAR:
         return "unsigned char";
-    case PLM_IMG_TYPE_ITK_SHORT:
-        return "short";
+    case PLM_IMG_TYPE_ITK_CHAR:
+        return "char";
     case PLM_IMG_TYPE_ITK_USHORT:
         return "unsigned short";
-    case PLM_IMG_TYPE_ITK_LONG:
-        return "long";
+    case PLM_IMG_TYPE_ITK_SHORT:
+        return "short";
     case PLM_IMG_TYPE_ITK_ULONG:
         return "unsigned long";
+    case PLM_IMG_TYPE_ITK_LONG:
+        return "long";
     case PLM_IMG_TYPE_ITK_FLOAT:
         return "float";
     case PLM_IMG_TYPE_ITK_DOUBLE:
         return "double";
     case PLM_IMG_TYPE_ITK_FLOAT_FIELD:
         return "float";
+    case PLM_IMG_TYPE_ITK_UCHAR_VEC:
+        return "unsigned char";
     case PLM_IMG_TYPE_GPUIT_UCHAR:
         return "unsigned char";
-    case PLM_IMG_TYPE_GPUIT_SHORT:
-        return "short";
     case PLM_IMG_TYPE_GPUIT_UINT16:
         return "unsigned short";
+    case PLM_IMG_TYPE_GPUIT_SHORT:
+        return "short";
     case PLM_IMG_TYPE_GPUIT_UINT32:
         return "unsigned long";
     case PLM_IMG_TYPE_GPUIT_INT32:
@@ -139,8 +143,8 @@
         return "float";
     case PLM_IMG_TYPE_GPUIT_FLOAT_FIELD:
         return "float";
-    case PLM_IMG_TYPE_ITK_UCHAR_VEC:
-        return "unsigned char";
+    case PLM_IMG_TYPE_GPUIT_LIST:
+        return "list (unknown)";
     case PLM_IMG_TYPE_GPUIT_UCHAR_VEC:
         return "unsigned char";
     default:
