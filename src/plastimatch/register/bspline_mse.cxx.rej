--- Plastimatch/src/plastimatch/register/bspline_mse.cxx	2016-08-10 00:01:45.589993858 +0200
+++ GitLabPlastimatch/src/plastimatch/register/bspline_mse.cxx	2016-08-10 00:54:10.289959645 +0200
@@ -132,8 +132,8 @@
         plm_long ijk_tile[3];
         plm_long ijk_local[3];
 
-        float xyz_fixed[3];
-        plm_long ijk_fixed[3];
+        float fxyz[3];
+        plm_long fijk[3];
         plm_long idx_fixed;
 
         float dxyz[3];
@@ -167,29 +167,28 @@
                 LOOP_THRU_TILE_X (ijk_local, bxf) {
 
                     // Construct coordinates into fixed image volume
-                    GET_VOL_COORDS (ijk_fixed, ijk_tile, ijk_local, bxf);
+                    GET_VOL_COORDS (fijk, ijk_tile, ijk_local, bxf);
 
                     // Make sure we are inside the image volume
-                    if (ijk_fixed[0] >= bxf->roi_offset[0] + bxf->roi_dim[0])
+                    if (fijk[0] >= bxf->roi_offset[0] + bxf->roi_dim[0])
                         continue;
-                    if (ijk_fixed[1] >= bxf->roi_offset[1] + bxf->roi_dim[1])
+                    if (fijk[1] >= bxf->roi_offset[1] + bxf->roi_dim[1])
                         continue;
-                    if (ijk_fixed[2] >= bxf->roi_offset[2] + bxf->roi_dim[2])
+                    if (fijk[2] >= bxf->roi_offset[2] + bxf->roi_dim[2])
                         continue;
 
                     // Compute physical coordinates of fixed image voxel
-                    /* To remove DCOS support, switch to 
-                       GET_REAL_SPACE_COORDS (xyz_fixed, ijk_fixed, bxf); */
-                    GET_WORLD_COORDS (xyz_fixed, ijk_fixed, fixed, bxf);
+                    POSITION_FROM_COORDS (fxyz, fijk, bxf->img_origin, 
+                        fixed->step);
 
                     /* JAS 2012.03.26: Tends to break the optimizer (PGTOL)   */
                     /* Check to make sure the indices are valid (inside roi) */
                     if (fixed_roi) {
-                        if (!inside_roi (xyz_fixed, fixed_roi)) continue;
+                        if (!inside_roi (fxyz, fixed_roi)) continue;
                     }
 
                     // Construct the image volume index
-                    idx_fixed = volume_index (fixed->dim, ijk_fixed);
+                    idx_fixed = volume_index (fixed->dim, fijk);
 
                     // Calc. deformation vector (dxyz) for voxel
                     bspline_interp_pix_c (dxyz, bxf, idx_tile, ijk_local);
@@ -197,15 +196,15 @@
                     // Calc. moving image coordinate from the deformation 
                     // vector
                     rc = bspline_find_correspondence_dcos_roi (
-                        xyz_moving, ijk_moving, xyz_fixed, dxyz, moving,
+                        xyz_moving, ijk_moving, fxyz, dxyz, moving,
                         moving_roi);
 
                     if (parms->debug) {
                         fprintf (corr_fp, 
                             "%d %d %d %f %f %f\n",
-                            (unsigned int) ijk_fixed[0], 
-                            (unsigned int) ijk_fixed[1], 
-                            (unsigned int) ijk_fixed[2], 
+                            (unsigned int) fijk[0], 
+                            (unsigned int) fijk[1], 
+                            (unsigned int) fijk[2], 
                             ijk_moving[0], ijk_moving[1], ijk_moving[2]);
                     }
 
@@ -355,8 +354,8 @@
         int ijk_tile[3];
         plm_long ijk_local[3];
 
-        float xyz_fixed[3];
-        plm_long ijk_fixed[3];
+        float fxyz[3];
+        plm_long fijk[3];
         plm_long idx_fixed;
 
         float dxyz[3];
@@ -390,24 +389,22 @@
                 LOOP_THRU_TILE_X (ijk_local, bxf) {
 
                     // Construct coordinates into fixed image volume
-                    GET_VOL_COORDS (ijk_fixed, ijk_tile, ijk_local, bxf);
+                    GET_VOL_COORDS (fijk, ijk_tile, ijk_local, bxf);
 
                     // Make sure we are inside the region of interest
-                    if (ijk_fixed[0] >= bxf->roi_offset[0] + bxf->roi_dim[0])
+                    if (fijk[0] >= bxf->roi_offset[0] + bxf->roi_dim[0])
                         continue;
-                    if (ijk_fixed[1] >= bxf->roi_offset[1] + bxf->roi_dim[1])
+                    if (fijk[1] >= bxf->roi_offset[1] + bxf->roi_dim[1])
                         continue;
-                    if (ijk_fixed[2] >= bxf->roi_offset[2] + bxf->roi_dim[2])
+                    if (fijk[2] >= bxf->roi_offset[2] + bxf->roi_dim[2])
                         continue;
 
                     // Compute physical coordinates of fixed image voxel
-                    /* To remove DCOS support, switch to 
-                       GET_REAL_SPACE_COORDS (xyz_fixed, ijk_fixed, bxf); */
-                    GET_WORLD_COORDS (xyz_fixed, ijk_fixed, 
-                        fixed, bxf);
+                    POSITION_FROM_COORDS (fxyz, fijk, bxf->img_origin, 
+                        fixed->step);
 
                     // Construct the image volume index
-                    idx_fixed = volume_index (fixed->dim, ijk_fixed);
+                    idx_fixed = volume_index (fixed->dim, fijk);
 
                     // Calc. deformation vector (dxyz) for voxel
                     bspline_interp_pix_c (dxyz, bxf, idx_tile, ijk_local);
@@ -416,7 +413,7 @@
                     /* To remove DCOS support, change function call to 
                        bspline_find_correspondence() */
                     rc = bspline_find_correspondence_dcos (
-                        xyz_moving, ijk_moving, xyz_fixed, dxyz, moving);
+                        xyz_moving, ijk_moving, fxyz, dxyz, moving);
 
                     // Return code is 0 if voxel is pushed outside of moving image
                     if (!rc) continue;
@@ -424,9 +421,9 @@
                     if (parms->debug) {
                         fprintf (corr_fp, 
                             "%d %d %d %f %f %f\n",
-                            (unsigned int) ijk_fixed[0], 
-                            (unsigned int) ijk_fixed[1], 
-                            (unsigned int) ijk_fixed[2], 
+                            (unsigned int) fijk[0], 
+                            (unsigned int) fijk[1], 
+                            (unsigned int) fijk[2], 
                             ijk_moving[0], ijk_moving[1], ijk_moving[2]);
                     }
 
@@ -575,8 +572,8 @@
         plm_long ijk_tile[3];
         plm_long ijk_local[3];
 
-        float xyz_fixed[3];
-        plm_long ijk_fixed[3];
+        float fxyz[3];
+        plm_long fijk[3];
         plm_long idx_fixed;
 
         float dxyz[3];
@@ -610,24 +607,22 @@
                 LOOP_THRU_TILE_X (ijk_local, bxf) {
 
                     // Construct coordinates into fixed image volume
-                    GET_VOL_COORDS (ijk_fixed, ijk_tile, ijk_local, bxf);
+                    GET_VOL_COORDS (fijk, ijk_tile, ijk_local, bxf);
 
                     // Make sure we are inside the image volume
-                    if (ijk_fixed[0] >= bxf->roi_offset[0] + bxf->roi_dim[0])
+                    if (fijk[0] >= bxf->roi_offset[0] + bxf->roi_dim[0])
                         continue;
-                    if (ijk_fixed[1] >= bxf->roi_offset[1] + bxf->roi_dim[1])
+                    if (fijk[1] >= bxf->roi_offset[1] + bxf->roi_dim[1])
                         continue;
-                    if (ijk_fixed[2] >= bxf->roi_offset[2] + bxf->roi_dim[2])
+                    if (fijk[2] >= bxf->roi_offset[2] + bxf->roi_dim[2])
                         continue;
 
                     // Compute physical coordinates of fixed image voxel
-                    /* To remove DCOS support, switch to 
-                       GET_REAL_SPACE_COORDS (xyz_fixed, ijk_fixed, bxf); */
-                    GET_WORLD_COORDS (xyz_fixed, ijk_fixed, 
-                        fixed, bxf);
+                    POSITION_FROM_COORDS (fxyz, fijk, bxf->img_origin, 
+                        fixed->step);
                     
                     // Construct the image volume index
-                    idx_fixed = volume_index (fixed->dim, ijk_fixed);
+                    idx_fixed = volume_index (fixed->dim, fijk);
 
                     // Calc. deformation vector (dxyz) for voxel
                     bspline_interp_pix_c (dxyz, bxf, idx_tile, ijk_local);
@@ -637,14 +632,14 @@
                     /* To remove DCOS support, change function call to 
                        bspline_find_correspondence() */
                     rc = bspline_find_correspondence_dcos (
-                        xyz_moving, ijk_moving, xyz_fixed, dxyz, moving);
+                        xyz_moving, ijk_moving, fxyz, dxyz, moving);
 
                     if (parms->debug) {
                         fprintf (corr_fp, 
                             "%d %d %d %f %f %f\n",
-                            (unsigned int) ijk_fixed[0], 
-                            (unsigned int) ijk_fixed[1], 
-                            (unsigned int) ijk_fixed[2], 
+                            (unsigned int) fijk[0], 
+                            (unsigned int) fijk[1], 
+                            (unsigned int) fijk[2], 
                             ijk_moving[0], ijk_moving[1], ijk_moving[2]);
                     }
 
